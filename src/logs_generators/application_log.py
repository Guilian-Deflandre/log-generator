from pydoc import describe
import random
from src import utils
from src import constants
from src.logs_generators.log import Log

class ApplicationLog(Log):
    """
    This class is used to generate logs simulating the ones generated by typical
    applications formatted logger. The forget logs can report an user authenti-
    cation, a profile update or a server transaction.

    Here, the format used is the following:
        yyyy-mm-ddThh:mm:ss.ssss{+|-}[hh]:[mm] LEVEL [SERVER_NAME]: DESCRIPTION

    See: https://en.wikibooks.org/wiki/OpenSSH/Logging_and_Troubleshooting

    Attributes
    ----------
    app_name : str
        The constant application name used in to forge the SERVER_NAME part of
        the generated logs.

    Methods
    -------
    str()
        Generate a random log simulation the report of either an user authenti-
        cation, a profile update or a server transaction.
    """

    def __init__(self, app_name) -> None:
        super().__init__()
        self._description_generator = [
            self._generate_connection_log,
            self._generate_connection_unknown_user_log,
            self._generate_profile_update_log,
            self._generate_transaction_log
        ]
        self.app_name = app_name

    def _generate_connection_log(self):
        """Generates a random log, without timestamp, simulating one reporting
        an application user connection under the format:
            INFO [{self.app_name}.com.Transaction.Manager]: DESCRIPTION

        Parameters
        ----------
        /

        Returns
        -------
        string
            The part of a log such as the one created by an application logger
            (i.e. of format LEVEL [SERVER_NAME]: DESCRIPTION).
        """

        description = "User " + utils.generate_random_username() + \
                      " connected from " + utils.generate_random_ipv4_address()
        return constants.LOG_LEVELS_STRING[constants.LOG_INFO_LEVEL] + " [" + \
                self.app_name + ".com.Connection.Manager]: " + description

    def _generate_connection_unknown_user_log(self):
        """Generates a random log, without timestamp, simulating one reporting
        an application connection attempt of an unknown user under the format:
            ERROR [{self.app_name}.com.Transaction.Manager]: DESCRIPTION

        Parameters
        ----------
        /

        Returns
        -------
        string
            The part of a log such as the one created by an application logger
            (i.e. of format LEVEL [SERVER_NAME]: DESCRIPTION).
        """

        description = "Unknow user " + utils.generate_random_username() + \
                      " tried to connect from " + \
                      utils.generate_random_ipv4_address()
        return constants.LOG_LEVELS_STRING[constants.LOG_ERROR_LEVEL] + " [" + \
                self.app_name + ".com.Connection.Manager]: " + description

    def _generate_profile_update_log(self):
        """Generates a random log, without timestamp, simulating one reporting
        an application profile update under the format:
            INFO [{self.app_name}.com.Transaction.Manager]: DESCRIPTION

        Parameters
        ----------
        /

        Returns
        -------
        string
            The part of a log such as the one created by an application logger
            (i.e. of format LEVEL [SERVER_NAME]: DESCRIPTION).
        """

        description = "User " + utils.generate_random_username() + \
                      " update profile from " + \
                      utils.generate_random_ipv4_address()
        return constants.LOG_LEVELS_STRING[constants.LOG_INFO_LEVEL] + " [" + \
                self.app_name + ".com.Profile.Manager]: " + description

    def _generate_transaction_log(self):
        """Generates a random log, without timestamp, simulating one reporting
        an application transaction under the format:
            DEBUG [{self.app_name}.com.Transaction.Manager]: DESCRIPTION

        Parameters
        ----------
        /

        Returns
        -------
        string
            The part of a log such as the one created by an application logger
            (i.e. of format LEVEL [SERVER_NAME]: DESCRIPTION).
        """

        description = "Starting transaction for session " + \
                        utils.generate_session_id()
        return constants.LOG_LEVELS_STRING[constants.LOG_DEBUG_LEVEL] + " [" + \
                self.app_name + ".com.Transaction.Manager]: " + description

    def str(self):
        """Generates a random log simulating one generate by typical application
        logger under the format:
            yyyy-mm-ddThh:mm:ss.ssss{+|-}[hh]:[mm] LEVEL [SERVER_NAME]: 
            DESCRIPTION

        Parameters
        ----------
        /

        Returns
        -------
        str
            A random application log.
        """

        description = random.choice(self._description_generator)
        self.update_timestamp()
        return self._timestamp.astimezone().replace(microsecond=0).isoformat() \
                + " " + description()
