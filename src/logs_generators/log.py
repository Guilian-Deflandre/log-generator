from src import constants
import datetime

class Log():
    """
    This class is used to define the structure of a log made, in its simpler
    form of a birthdate, a timestamp and a short description.

    See: https://en.wikipedia.org/wiki/Logging_(software)

    Attributes
    ----------
    _birthdate : timestamp
        The timestamp of the creation of the Log object.
    _timestamp : timestamp
        The timestamp of the log generated by the Log object.


    Methods
    -------
    write_log()
        Write the forged log in an file.
    update_timestamp()
        Update the timestamp of the Log to the current time.
    str()
        Convert the log object to a string in the simplest log format being
        YYYY-mm-ddThh:mm:ss.msmsms{+|-}[hh]:[mm] DESCRIPTION
    """

    def __init__(self, timestamp = None):
        self._birthdate = datetime.datetime.now() if (timestamp is None) else \
                            timestamp
        self._timestamp = datetime.datetime.now() if (timestamp is None) else \
                            timestamp
        return

    def write_log(self):
        """Write the log as a string in an output file defined as a constant.

        Parameters
        ----------
        /

        Returns
        -------
        /
        """

        file = open(constants.LOG_FILE_NAME, "a+")
        file.write(self.str() + "\n")
        file.close()
        return
    
    def update_timestamp(self):
        """Update the timestamp class variable to the current time.

        Parameters
        ----------
        /

        Returns
        -------
        /
        """

        self._timestamp = datetime.datetime.now()
        return

    def str(self):
        """Generate a log in under the format:
            YYYY-mm-ddThh:mm:ss.ssss{+|-}[hh]:[mm] DESCRIPTION

        Parameters
        ----------
        /

        Returns
        -------
        str
            A log made of a timestamp and a short description.
        """

        self.update_timestamp()
        return self._timestamp.strftime("%Y-%m-%dT%H:%M:%S.%f%z") + " " + \
                self.description
